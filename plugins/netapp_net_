#!/usr/bin/python
#
# This plugin show the network traffic for the network interfaces
#
# Usage: symlink this plugin like netapp_net_hostnam
#
# The clean function was used from the Perl version
#
# Install:
# - libsnmp-python
# - python-pysnmp2
# - python-pysnmp-common

import netsnmp
import sys
import os
from os.path import basename

host = basename(sys.argv[0]).replace('netapp_net_','')

if host == '':
    sys.stderr.write("symlink this plugin like netapp_net_hostname\n")
    exit(1)

community = os.getenv('community')

def clean(hoog, laag):
    tmp_pow2tot32 = 1 << 32
    if hoog < 0:
        hoog = tmp_pow2tot32 + hoog
    if laag < 0:
        laag = tmp_pow2tot32 + laag
        hoog = hoog + 1

    return hoog * tmp_pow2tot32 + laag

argc = len(sys.argv)
if argc > 1 and sys.argv[1] == 'config':
    print "host_name %s" % host
    print "graph_title Total Network traffic"
    print "graph_order recv send"
    print "graph_args --base 1000"
    print "graph_vlabel bits in (-) / out (+) per ${graph_period}"
    print "graph_category network"
    print "graph_info This graph shows traffic for the network interfaces."
    print "send.info Bits sent/received by this interface."
    print "recv.label recv"
    print "recv.type DERIVE"
    print "recv.graph no"
    print "recv.cdef recv,8,*"
    print "recv.max 2000000000"
    print "recv.min 0"
    print "send.label bps"
    print "send.type DERIVE"
    print "send.negative recv"
    print "send.cdef send,8,*"
    print "send.max 2000000000"
    print "send.min 0"
    exit(0)
else:
    in_high  = netsnmp.Varbind(".1.3.6.1.4.1.789.1.2.2.11")
    in_low   = netsnmp.Varbind(".1.3.6.1.4.1.789.1.2.2.12")
    out_high = netsnmp.Varbind(".1.3.6.1.4.1.789.1.2.2.13")
    out_low  = netsnmp.Varbind(".1.3.6.1.4.1.789.1.2.2.14")

    res_in_high = netsnmp.snmpwalk(in_high, Version = 1, DestHost = host, Community = community)
    res_in_low = netsnmp.snmpwalk(in_low, Version = 1, DestHost = host, Community = community)
    res_out_high = netsnmp.snmpwalk(out_high, Version = 1, DestHost = host, Community = community)
    res_out_low = netsnmp.snmpwalk(out_low, Version = 1, DestHost = host, Community = community)

    print "recv.value %d" % clean(int(res_in_high[0]), int(res_in_low[0]))
    print "send.value %d" % clean(int(res_out_high[0]), int(res_out_low[0]))
    

# vim:ft=python:sw=4:ts=4:expandtab
